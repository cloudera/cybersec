{
  "name": "SYBERCES",
  "label": "Cybersec",
  "description": "Cyber security project.",
  "version": "1.0",
  "compatibility": {
    "cdhVersion": {
      "min": "7.1.6"
    }
  },
  "runAs": {
    "user": "cybersec",
    "group": "cybersec",
    "principal": "cybersec"
  },
  "icon": "images/cybersec.svg",
  "parcel": {
    "repoUrl": "https://archive.cloudera.com/p/csa/1.6/parcels",
    "requiredTags": [
      "cybersec",
      "cdh"
    ],
    "optionalTags": [
      "cybersec-plugin"
    ]
  },
  "serviceDependencies": [
    {
      "name": "FLINK",
      "required": "false"
    },
    {
      "name": "KAFKA",
      "required": "false"
    }
  ],
  "dependencyExtensions": [
    {
      "type": "kafkaDependency",
      "extensionId": "kafka_dependency"
    }
  ],
  "hdfsDirs": [
    {
      "name": "CreateCybersecUserDirCommand",
      "label": "Create Cybersec User Directory",
      "description": "Creates the directory in HDFS for the cybersec user.",
      "directoryDescription": "Cybersec User Directory (HDFS)",
      "path": "/user/cybersec/",
      "permissions": "1755"
    }
  ],
  "kerberos": "${kerberos.auth.enabled}",
  "parameters": [
    {
      "name": "kerberos.auth.enabled",
      "label": "Enable Kerberos Authentication",
      "description": "Enables Kerberos authentication for Cybersec",
      "type": "boolean",
      "default": "false",
      "configurableInWizard": true
    }
  ],
  "gateway": {
    "alternatives": {
      "name": "cybersec-conf",
      "linkRoot": "/etc/cybersec",
      "priority": 50
    },
    "scriptRunner": {
      "program": "scripts/control.sh",
      "environmentVariables": {
        "KERBEROS_ENABLED": "${kerberos.auth.enabled}"
      },
      "args": [
        "client"
      ]
    },
    "sslClient": {
      "truststoreFormat": "jks",
      "truststoreLocationConfigName": "ssl.client.truststore.location",
      "truststorePasswordConfigName": "ssl.client.truststore.password",
      "truststorePasswordCredentialProviderCompatible": true,
      "autoTlsMode": "auto"
    },
    "configWriter": {
      "generators": [
        {
          "filename": "cybersec-conf/kafka.properties",
          "configFormat": "jinja",
          "template": "aux/templates/kafka.properties.j2",
          "includedParams": [
            "cybersec_kafka_client_security_protocol",
            "ssl_client_truststore_location",
            "ssl_client_truststore_password",
            "schema_registry_url",
            "kafka_acks",
            "kafka_auto_offset_reset"
          ],
          "additionalConfigs": [
            {
              "key": "kafka.brokers.list",
              "value": "${kafka_brokers_list}"
            }
          ]
        },
        {
          "filename": "cybersec-conf/generator.properties",
          "configFormat": "properties",
          "includedParams": [
            "generator_eps",
            "generator_avro_flag",
            "generator_metrics"
          ],
          "additionalConfigs": [
            {
              "key": "flink.job.name",
              "value": "Job Generator"
            },
            {
              "key": "kafka.client.id",
              "value": "kafka.generator.client.id"
            },
            {
              "key": "kafka.group.id",
              "value": "kafka.generator.group.id"
            }
          ]
        },
        {
          "filename": "cybersec-conf/parser.properties",
          "configFormat": "properties",
          "includedParams": [
          ],
          "additionalConfigs": [
            {
              "key": "flink.job.name",
              "value": "Job Parser"
            }
          ]
        },
        {
          "filename": "cybersec-conf/enrichment.properties",
          "configFormat": "properties",
          "includedParams": [
          ],
          "additionalConfigs": [
            {
              "key": "flink.job.name",
              "value": "Job Triage"
            }
          ]
        },
        {
          "filename": "cybersec-conf/profile.properties",
          "configFormat": "properties",
          "includedParams": [
          ],
          "additionalConfigs": [
            {
              "key": "flink.job.name",
              "value": "Job Profile"
            }
          ]
        },
        {
          "filename": "cybersec-conf/indexing.properties",
          "configFormat": "properties",
          "includedParams": [
          ],
          "additionalConfigs": [
            {
              "key": "flink.job.name",
              "value": "Job Hive Indexing"
            }
          ]
        }
      ]
    },
    "parameters": [
      {
        "name": "schema_registry_url",
        "label": "Schema registry url",
        "description": "Schema registry server URL in the format http(s)://{schema-registry-host}:{schema-registry-port}/api/v1",
        "configName": "schema.registry.url",
        "type" : "uri",
        "allowedSchemes": [ "http", "https" ],
        "default" : "",
        "configurableInWizard": true
      },
      {
        "name": "kafka_auto_offset_reset",
        "label": " Kafka offset reset policy",
        "description": "The auto offset reset kafka consumer configuration defines how the kafka consumer should behave when consuming from a topic partition when there is no initial offset.",
        "configName": "kafka.auto.offset.reset",
        "type": "string_enum",
        "validValues": [
          "earliest",
          "latest"
        ],
        "default": "earliest"
      },
      {
        "name": "kafka_acks",
        "label": " Kafka client acknowledgements",
        "description": "Indicates the number of brokers that must receive a record before it is marked as a successful record.",
        "configName": "kafka.acks",
        "type": "string_enum",
        "validValues": [
          "0",
          "1",
          "all"
        ],
        "default": "all"
      },
      {
        "name": "cybersec_kafka_client_security_protocol",
        "label": "Kafka Client Security Protocol",
        "description": "Protocol to be used for communicating with Kafka, INFERRED setup assumes that Kafka service is set up the same as SMM regarding kerberos and ssl.",
        "type": "string_enum",
        "configName": "cybersec.kafka.client.security.protocol",
        "validValues": [
          "PLAINTEXT",
          "SSL",
          "SASL_PLAINTEXT",
          "SASL_SSL"
        ],
        "default": "PLAINTEXT"
      },
      {
        "name": "generator_eps",
        "label": "Generator eps",
        "description": "Indicates the number of records generated by the generator per second.",
        "configName": "generator.eps",
        "type": "long",
        "min": 0,
        "default": 100
      },
      {
        "name": "generator_avro_flag",
        "label": "Generator Avro",
        "description": "Specifies whether the generator should create records in avro format.",
        "configName": "generator.avro.flag",
        "type": "boolean",
        "default": false
      },
      {
        "name": "generator_metrics",
        "label": "Generator metrics",
        "description": "Kafka topic for generator metrics.",
        "configName": "generator.metrics",
        "type": "string",
        "default": "generator.count"
      },
      {
        "name": "chain_file",
        "label": "Chain file path",
        "description": "Path to file with ",
        "configName": "chain.file",
        "type": "string",
        "default": "generator.count"
      }
    ]
  }
}
