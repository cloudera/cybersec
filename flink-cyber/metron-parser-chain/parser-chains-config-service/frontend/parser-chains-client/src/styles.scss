/*!
 * Copyright 2020 - 2022 Cloudera. All Rights Reserved.
 *
 * This file is licensed under the Apache License Version 2.0 (the "License"). You may not use this file
 * except in compliance with the License. You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0.
 *
 * This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. Refer to the License for the specific permissions and
 * limitations governing your use of the file.
 */
@use '@angular/material' as mat;

@include mat.core();
@import "./theme.scss";
@import "./custom-component-theme";
@import "./custom-palite";

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$parser-chaining-primary: mat.define-palette(mat.$indigo-palette);
$parser-chaining-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$parser-chaining-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$parser-chaining-theme: mat.define-light-theme((
  color: (
    primary: $parser-chaining-primary,
    accent: $parser-chaining-accent,
    warn: $parser-chaining-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($parser-chaining-theme);

@include mat.all-component-themes($theming-material-components-theme);
@include custom-components-theme($theming-material-components-theme, $notifications-theme);

$theme-primary: mat.define-palette($md-cyber-blue-primary);
$theme-accent: mat.define-palette($md-cyber-gray-secondary);

// The warn palette is optional (defaults to red).
$theme-warn: mat.define-palette(mat.$yellow-palette);

//Old css. ToDo: refactor.
.ant-card-body {
  padding: 16px;
}
.ant-card-head {
  background: var(--card-head-bg);
}

// Table

.ant-table-placeholder {
  border-bottom: none;
}

// .ant-table-thead > tr > th {
//   background: var(--background);
//   color: var(--text);
// }

.ant-table-tbody > tr:hover:not(.ant-table-expanded-row) > td {
  background: var(--background);
}
.ant-table-thead > tr > th {
  border-bottom: 1px solid var(--light-border);
}
.ant-table-tbody > tr > td {
  border-bottom: 1px solid var(--light-separator);
}

.ant-table-placeholder {
  background: var(--background);
}

.ant-empty {
  color: var(--empty-text-color);
}

// Pagination

.ant-pagination-item-active,
.ant-pagination-item-active:hover {
  border-color: var(--pagination-active);
}

.ant-pagination-item-active a,
.ant-pagination-item-active:hover a {
  color: var(--pagination-active);
}

.ant-pagination-prev .ant-pagination-item-link,
.ant-pagination-next .ant-pagination-item-link {
  background: var(--background);
  color: var(--text);
}

.ant-pagination-disabled a,
.ant-pagination-disabled:hover a,
.ant-pagination-disabled:focus a,
.ant-pagination-disabled .ant-pagination-item-link,
.ant-pagination-disabled:hover .ant-pagination-item-link,
.ant-pagination-disabled:focus .ant-pagination-item-link {
  border-color: var(--light-border);
}
// Menu

.ant-menu-item > a:hover {
  color: var(--text);
}

.ant-menu-item-selected > a:hover {
  color: var(--cldr-white);
}

// Button

.ant-btn-default,
.ant-btn-default:hover,
.ant-btn-default:active,
.ant-btn-default:focus {
  background: var(--background);
  border-color: var(--light-border);
  color: var(--text);
}

.ant-btn-primary:hover,
.ant-btn-primary:focus {
  background-color: var(--primary);
  border-color: var(--primary);
}

.ant-btn-primary[disabled] {
  background-color: var(--btn-primary-disabled-bg);
}

.ant-btn-danger:hover,
.ant-btn-danger:focus {
  background-color: var(--warning);
  border-color: var(--warning);
}

.ant-select-selection {
  border:1px solid var(--input-border-color);
}

.parser-chain .ant-card-head-title {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.success-snackbar {
  background: rgb(0, 110, 37);
  color: white;
  font-weight: bold;
  margin-bottom: 5px;
  letter-spacing: .05em
}

.fail-snackbar {
  background: #850900;
  color: white;
  font-weight: bold;
  margin-bottom: 5px;
  letter-spacing: .05em
}

.warning-snackbar {
  background: rgb(255, 166, 0);
  color: white;
}

.success-snackbar .mat-simple-snackbar-action {
  color: black;
}

.warning-snackbar .mat-simple-snackbar-action {
  color: black;
}

.fail-snackbar .mat-simple-snackbar-action {
  color: black;
}

.chain-item {
  background-color: var(--card-head-bg);
  .ant-tabs-content {
    min-height: 150px;
  }
}

.popup {
  mat-dialog-container {
    width: 500px;
    height: 400px;
    min-width: 400px;
    min-height: 300px;
    resize: both;
  }
}

.popup-content {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
