<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>flink-cyber</artifactId>
        <groupId>com.cloudera.cyber</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>cyber-jobs</artifactId>
    <version>${project.parent.version}</version>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <cloudera.tar.name>cyber-jobs-${project.version}</cloudera.tar.name>
<!--        <zookeeper.optional.version>${zookeeper.version}</zookeeper.optional.version>-->
    </properties>


    <dependencies>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <!-- API bridge between log4j 1 and 2; included for convenience -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <configuration>
                        <finalName>flink-${project.version}-bin</finalName>
                        <appendAssemblyId>false</appendAssemblyId>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>dependency-convergence</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--unit tests-->
            <!--plugin must appear BEFORE the shade-plugin to not mess up package order and include the non-uber JAR into the assembly-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <reuseForks>false</reuseForks>
                    <!-- <workingDirectory>${project.build.testOutputDirectory}</workingDirectory> -->
                    <systemPropertyVariables>
                        <log.level>WARN</log.level>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <!-- jaxb-api is packaged as an optional dependency that is only accessible on Java 11 -->
                            <Multi-Release>true</Multi-Release>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-javax-jars</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>javax.xml.bind</groupId>
                                    <artifactId>jaxb-api</artifactId>
                                    <version>2.3.1</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>javax.activation</groupId>
                                    <artifactId>javax.activation-api</artifactId>
                                    <version>1.2.0</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/temporary/java11_exclusive</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>bundle-java11-exclusive-dependencies</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="bundling java11-exclusive dependencies"/>
                                <unzip dest="${project.build.directory}/classes/META-INF/versions/11">
                                    <fileset dir="${project.build.directory}/temporary/java11_exclusive">
                                        <include name="*"/>
                                    </fileset>
                                </unzip>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Build uber jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <id>shade-dist</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <shadedArtifactAttached>false</shadedArtifactAttached>
                            <finalName>${project.artifactId}-${project.version}</finalName>
                            <filters>
                                <!-- Globally exclude log4j.properties from our JAR files. -->
                                <filter>
                                    <artifact>*</artifact>
                                    <excludes>
                                        <exclude>org/apache/flink/runtime/util/bash/BashJavaUtils.class</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <artifactSet>
                                <excludes>
                                    <!-- log4j 2 is bundled separately from the flink-dist jar -->
                                    <exclude>org.apache.logging.log4j:*</exclude>
                                    <!-- Bundled separately so that users can easily switch between ZK 3.4/3.5-->
                                    <exclude>org.apache.flink:flink-shaded-zookeeper-3</exclude>
                                </excludes>
                            </artifactSet>
                        </configuration>
                    </execution>
                    <execution>
                        <!--
                        Disable inherited shade-flink to prevent the Shade plugin from changing the project.basedir. The basedir
                        is changed by the Shade plugin when dependencyReducedPomLocation is set to a different location than the
                        original basedir. We do that in the root pom.xml.
                        -->
                        <id>shade-flink</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Build BashJavaUtils jar -->
                    <execution>
                        <id>bash-utils</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <shadedArtifactAttached>false</shadedArtifactAttached>
                            <finalName>bash-java-utils</finalName>
                            <filters>
                                <!-- Include only the BashJavaUtils, other required classes should come from the flink-dist-->
                                <filter>
                                    <artifact>org.apache.flink:*</artifact>
                                    <includes>
                                        <include>org/apache/flink/runtime/util/bash/BashJavaUtils.class</include>
                                    </includes>
                                </filter>
                            </filters>
                            <artifactSet>
                                <includes>
                                    <exclude>org.apache.logging.log4j:*</exclude>
                                    <include>org.apache.flink:*</include>
                                </includes>
                            </artifactSet>
                            <transformers>
                                <!-- Include a log4j2 configuration that always prints to stdout -->
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                                    <resource>log4j2.properties</resource>
                                    <file>src/main/resources/log4j-bash-utils.properties</file>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>bin</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assemblies/bin.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <execution>
                        <id>opt</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assemblies/opt.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <execution>
                        <id>cloudera</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assemblies/cloudera.xml</descriptor>
                            </descriptors>
                            <finalName>${cloudera.tar.name}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.4</version><!--$NO-MVN-MAN-VER$-->
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>