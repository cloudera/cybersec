<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2020 - 2022 Cloudera. All Rights Reserved.
  ~
  ~ This file is licensed under the Apache License Version 2.0 (the "License"). You may not use this file
  ~ except in compliance with the License. You may obtain a copy of the License at
  ~ http://www.apache.org/licenses/LICENSE-2.0.
  ~
  ~ This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
  ~ either express or implied. Refer to the License for the specific permissions and
  ~ limitations governing your use of the file.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cloudera.cyber</groupId>
    <artifactId>flink-cyber</artifactId>
    <version>2.4.0</version>
    <packaging>pom</packaging>
    <modules>
        <module>flink-logging</module>
        <module>flink-cyber-api</module>
        <module>cyber-functions</module>
        <module>flink-common</module>
        <module>flink-alert-scoring</module>
        <module>flink-alert-scoring-api</module>
        <module>flink-phoenix-jdbc</module>
        <module>flink-indexing</module>
        <module>flink-enrichment</module>
        <module>flink-sessions</module>
        <module>flink-dedupe</module>
        <module>flink-profiler-java</module>
        <module>flink-profiler</module>
        <module>flink-rules</module>
        <module>metron-parser-chain</module>
        <module>parser-chains-flink</module>
        <module>caracal-generator</module>
        <module>caracal-parser</module>
        <module>data-management</module>
        <module>flink-parse</module>
        <module>flink-stellar</module>
        <module>flink-hbase-common</module>
        <module>metron-common</module>
        <module>metron-hbase-common</module>
        <module>flink-commands</module>
        <module>cyber-jobs</module>
        <module>cyber-csd</module>
        <module>cyber-parcel</module>
        <module>cyber-services</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>11</java.version>
        <flink.version>1.15.1-csa1.9.0.1</flink.version>
        <flink.hbase.version>2.4</flink.hbase.version>
        <cdh.version>7.1.7.0-551</cdh.version>
        <lombok.version>1.18.30</lombok.version>
        <lombok.plugin.version>1.18.20.0</lombok.plugin.version>
        <guava.version>33.0.0-jre</guava.version>
        <avro.version>1.10.0</avro.version>
        <log4j.kafka.version>2.5.0.${cdh.version}</log4j.kafka.version>
        <scala.binary.version>2.12</scala.binary.version>
        <kafka.version>2.5.0.${cdh.version}</kafka.version>
        <nifi.version>1.11.4</nifi.version>
        <jackson.version>2.11.2</jackson.version>
        <jackson.datatype.version>2.10.1</jackson.datatype.version>
        <smm.intercepter.version>2.1.0.${cdh.version}</smm.intercepter.version>
        <flink.format.parquet.version>1.11.1</flink.format.parquet.version>
        <slf4j.version>1.7.36</slf4j.version>
        <log4j.version>2.23.1</log4j.version>
        <log4j1.version>1.2.17</log4j1.version>
        <spring-boot.version>2.7.6</spring-boot.version>
        <springdoc-openapi.version>1.6.11</springdoc-openapi.version>
        <multiline-string.version>0.1.2</multiline-string.version>
        <solr.version>8.4.1.${cdh.version}</solr.version>
        <maxmind.version>2.13.1</maxmind.version>
        <hadoop.version>3.1.1.${cdh.version}</hadoop.version>
        <hbase.version>2.2.3.${cdh.version}</hbase.version>
        <datasketches.version>1.3.0-incubating</datasketches.version>
        <json.simple.version>1.1.1</json.simple.version>
        <phoenix.version>5.1.0.${cdh.version}</phoenix.version>
        <phoenix.queryserver>6.0.0.${cdh.version}</phoenix.queryserver>
        <classindex.version>3.4</classindex.version>
        <antlr.version>4.9.3</antlr.version>
        <metrics.version>4.2.25</metrics.version>
        <pcap.version>1.7.1</pcap.version>
        <global.kryo.version>3.0.3</global.kryo.version>
        <global.kryo-serializers.version>0.38</global.kryo-serializers.version>
        <global.jar.version>3.3.0</global.jar.version>
        <global.httpclient.version>4.5.14</global.httpclient.version>
        <cybersec.full.version>${project.parent.version}-${flink.version}-cdh${cdh.version}-${timestamp}</cybersec.full.version>
        <simple-syslog.version>0.0.6</simple-syslog.version>
        <testng.version>7.9.0</testng.version>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyMMddHHmm</maven.build.timestamp.format>
        <json-path.version>2.9.0</json-path.version>
        <java-grok.version>0.1.9</java-grok.version>
        <everit-json-schema.version>1.14.4</everit-json-schema.version>
        <graalvm.version>22.3.5</graalvm.version>
        <aesh.version>0.66.19</aesh.version>
        <reflections.version>0.9.10</reflections.version>
        <tlsh.version>3.7.1</tlsh.version>
        <jsr305.version>3.0.0</jsr305.version>
        <fliptables.version>1.0.2</fliptables.version>
        <json-schema-validator.version>2.2.6</json-schema-validator.version>
        <ipaddress.version>5.3.4</ipaddress.version>
        <validation-api.version>2.0.1.Final</validation-api.version>
        <hibernate-validator.version>8.0.0.Final</hibernate-validator.version>
        <storm.hdfs.version>0.1.2</storm.hdfs.version>
        <geohash.version>1.3.0</geohash.version>
        <spatial4j.version>0.6</spatial4j.version>
        <asm.version>5.0.3</asm.version>
        <analytics.stream.version>2.9.5</analytics.stream.version>
        <curator-test.version>2.7.1</curator-test.version>
        <zjsonpatch.version>0.3.4</zjsonpatch.version>
        <opencsv.version>3.7</opencsv.version>
        <javax.el.version>3.0.0</javax.el.version>
        <spring-boot.version>2.7.18</spring-boot.version>
        <evo-inflector.version>1.2.2</evo-inflector.version>
        <springdoc-openapi.version>1.6.11</springdoc-openapi.version>
        <json.version>20220320</json.version>
        <caffeine.version>2.9.3</caffeine.version>
        <jsonevent-layout.version>1.7</jsonevent-layout.version>
        <schema-registry-serdes.version>0.9.1</schema-registry-serdes.version>
        <dnsjava.version>3.5.3</dnsjava.version>
        <freemarker.version>2.3.32</freemarker.version>
        <javafaker.version>1.0.2</javafaker.version>
        <joda-time.version>2.12.7</joda-time.version>
        <!--Commons-->
        <commons-validator.version>1.8.0</commons-validator.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <commons-text.version>1.11.0</commons-text.version>
        <commons-lang3.version>3.10</commons-lang3.version>
        <commons.math3.version>3.6.1</commons.math3.version>
        <commons-config.version>1.10</commons-config.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-io.version>2.6</commons-io.version>
        <commons-cli.version>1.3.1</commons-cli.version>
        <commons-net.version>3.6</commons-net.version>
        <commons-vfs2.version>2.6.0</commons-vfs2.version>
        <commons-codec.version>1.10</commons-codec.version>
        <commons-compress.version>1.26.1</commons-compress.version>
        <!--Plugins-->
        <maven-shade-plugin.version>3.5.2</maven-shade-plugin.version>
        <maven-clean-plugin.version>3.3.2</maven-clean-plugin.version>
        <maven-assembly-plugin.version>3.7.0</maven-assembly-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>${maven-surefire-plugin.version}</maven-failsafe-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.6.1</maven-dependency-plugin.version>
        <maven-source-plugin.version>3.3.0</maven-source-plugin.version>
        <maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version>
        <maven-install-plugin.version>3.1.1</maven-install-plugin.version>
        <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
        <download-maven-plugin.version>1.3.0</download-maven-plugin.version>
        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <build-helper-maven-plugin.version>3.5.0</build-helper-maven-plugin.version>
        <frontend-maven-plugin.version>1.12.1</frontend-maven-plugin.version>
        <frontend-maven-plugin.nodeVersion>v16.10.0</frontend-maven-plugin.nodeVersion>
        <!--Tests-->
        <junit.version>4.13.2</junit.version>
        <junit5.version>5.7.0</junit5.version>
        <jupiter.junit.version>5.9.3</jupiter.junit.version>
        <mockito.version>3.12.4</mockito.version>
        <hamcrest.version>2.2</hamcrest.version>
        <testcontainers.version>1.19.7</testcontainers.version>
        <assertj.version>3.25.3</assertj.version>
        <assertj-core.version>3.17.2</assertj-core.version>
        <kafka-junit4.version>3.2.5</kafka-junit4.version>
        <equalsverifier.version>2.5.2</equalsverifier.version>
        <mockserver.version>5.11.1</mockserver.version>
        <json-flattener.version>0.14.2</json-flattener.version>
    </properties>

    <repositories>
        <repository>
            <id>cloudera</id>
            <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
        </repository>
        <repository>
            <id>multiline-release-repo</id>
            <url>https://raw.github.com/benelog/multiline/master/maven-repository</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <!-- Flink Dependencies -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-core</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-java</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-statebackend-rocksdb</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-kafka</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-hive_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-common</artifactId>
                <version>${flink.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-filesystem_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-sequence-file</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-avro</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-json</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-csv</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-orc</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-parquet</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-hbase</artifactId>
                <version>${flink.version}</version>
            </dependency>

<!--            replacing inside flink-cloudera-registry-->
            <dependency>
                <groupId>com.github.erosb</groupId>
                <artifactId>everit-json-schema</artifactId>
                <version>${everit-json-schema.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-cloudera-registry</artifactId>
                <version>${flink.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.avro</groupId>
                        <artifactId>avro</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.everit.json</groupId>
                        <artifactId>org.everit.json.schema</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.hortonworks.smm</groupId>
                <artifactId>monitoring-interceptors</artifactId>
                <version>[${smm.intercepter.version},)</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>jul-to-slf4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>jcl-over-slf4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>log4j-over-slf4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-api-java</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-api-java-bridge</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-state-processor-api_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-hbase_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-elasticsearch7</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.solr</groupId>
                <artifactId>solr-solrj</artifactId>
                <version>${solr.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>jcl-over-slf4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Hadoop -->
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-common</artifactId>
                <version>${hadoop.version}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Avro -->
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-client</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>it.unimi.dsi</groupId>
                        <artifactId>fastutil</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-ipc</artifactId>
                <version>${avro.version}</version>
            </dependency>


            <!-- Kafka -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala.binary.version}</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>com.hortonworks.registries</groupId>
                <artifactId>schema-registry-serdes</artifactId>
                <version>${schema-registry-serdes.version}</version>
            </dependency>

            <!-- Utilities -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <scope>compile</scope>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <scope>compile</scope>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>${commons-validator.version}</version>
            </dependency>

            <!-- Libraries -->
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
            </dependency>

            <!-- Caching -->
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>

            <!--JS-->
            <dependency>
                <groupId>org.graalvm.sdk</groupId>
                <artifactId>graal-sdk</artifactId>
                <version>${graalvm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.graalvm.js</groupId>
                <artifactId>js</artifactId>
                <version>${graalvm.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- Logging and Metrics -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <dependency>
                <!-- API bridge between log4j 1 and 2 -->
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-1.2-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-log4j-appender</artifactId>
                <version>${log4j.kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>net.logstash.log4j</groupId>
                <artifactId>jsonevent-layout</artifactId>
                <version>${jsonevent-layout.version}</version>
            </dependency>

            <!-- Test -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit5.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-test-utils</artifactId>
                <version>${flink.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-runtime</artifactId>
                <scope>test</scope>
                <classifier>tests</classifier>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java</artifactId>
                <scope>test</scope>
                <classifier>tests</classifier>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.adrianwalker</groupId>
                <artifactId>multiline-string</artifactId>
                <version>${multiline-string.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>tools</artifactId>
                        <groupId>sun.jdk</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Java Compiler -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>

                <!-- Dependency copy -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>copy-dependencies</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>jars</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Assembly -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>

                <!-- NiFi Nar Builder -->
                <plugin>
                    <groupId>org.apache.nifi</groupId>
                    <artifactId>nifi-nar-maven-plugin</artifactId>
                    <version>${nifi.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <enforceDocGeneration>true</enforceDocGeneration>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>full-build</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>cyber-jobs</module>
                <module>cyber-csd</module>
                <module>cyber-parcel</module>
                <module>metron-parser-chain/parser-chains-config-service/frontend/parser-chains-client</module>
            </modules>
        </profile>
        <profile>
            <id>add-dependencies-for-IDEA</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>idea.version</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-core</artifactId>
                    <version>${flink.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-java</artifactId>
                    <version>${flink.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-connector-kafka</artifactId>
                    <version>${flink.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.flink</groupId>
                    <artifactId>flink-cloudera-registry</artifactId>
                    <version>${flink.version}</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
